esphome:
  name: smart-doorbell
  project:
    name: zuidwijk.smart-doorbell
    version: "1.0"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:

ota:

wifi:
  # remove leading '#' and fill in your wifi details
#  ssid: !secret wifi_ssid 
#  password: !secret wifi_password
  ap:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
    ssid: "smart-doorbell"

captive_portal:

improv_serial:

esp32_improv:
  authorizer: none

#doesnt work together with captive_portal
esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:
  active: true

web_server:
  port: 80

dashboard_import:
  package_import_url: github://zuidwijk/esphome-doorbell/smart-doorbell.yaml@main
  import_full_config: true

time:
  - platform: homeassistant
    id: homeassistant_time
 
text_sensor:
  - platform: version
    name: Doorbell ESPHome Version
  - platform: wifi_info
    ip_address:
      name: Doorbell IP
    ssid:
      name: Doorbell SSID
    bssid:
      name: Doorbell BSSID
 
sensor:
  - platform: uptime
    name: Doorbell Uptime
  - platform: wifi_signal
    name: Doorbell WiFi Signal
    update_interval: 60s
 
globals:
  - id: chime
    type: bool
    restore_value: true
    initial_value: 'true'

number:
  - platform: template
    name: "Doorbell Switch Off Delay"
    id: switch_off_delay
    optimistic: true
    mode: box
    min_value: 0
    max_value: 2000
    step: 1
    restore_value: yes
    initial_value: 0

select:
  - platform: template
    name: "Doorbell Chime Sound"
    id: chime_sound
    optimistic: true
    options:
      - "Switch"
      - "Zuidwijk Dingdong"
    initial_option: "Switch"
    restore_value: yes

switch:
  - platform: gpio
    pin:
      number: GPIO5
      inverted: false
    name: "Doorbell Relay"
    id: relay
    internal: true
    icon: mdi:alarm-bell
  - platform: restart
    name: "Doorbell Restart"
  - platform: template
    name: Doorbell Chime Active
    id: chime_active
    restore_mode: disabled
    turn_on_action:
      - globals.set:
          id: chime
          value: 'true'
    turn_off_action:
      - globals.set:
          id: chime
          value: 'false'
    lambda: |-
      return id(chime);
     
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    name: "Doorbell"
    filters:
      - delayed_on: 1ms
      - delayed_off: !lambda |-
          if (id(chime_sound).state == "Zuidwijk Dingdong") {
            return 2500;
          }
          else {
            return int(id(switch_off_delay).state);
          }
    on_press:
      then:
        - logger.log:
            format: "chime_sound: %s"
            args: ['id(chime_sound).state.c_str()']
        - logger.log:
            format: "switch_off_delay: %.1f"
            args: ['id(switch_off_delay).state']
        - if:
            condition:
              - switch.is_on: chime_active
            then:
              - if:
                  condition:
                    - lambda: return (id(chime_sound).state == "Switch");
                  then:
                    - switch.turn_on: relay

              - if:
                  condition:
                    - lambda: return (id(chime_sound).state == "Zuidwijk Dingdong");
                  then:
                    - switch.turn_on: relay
                    - delay: 200ms
                    - switch.turn_off: relay
                    - delay: 600ms
                    - switch.turn_on: relay
                    - delay: 200ms
                    - switch.turn_off: relay
                    - delay: 600ms
                    - switch.turn_on: relay
                    - delay: 200ms
                    - switch.turn_off: relay
    on_release:
      then:
        - if:
            condition:
              - lambda: return (id(chime_sound).state == "Switch");
            then:
              - switch.turn_off: relay

  - platform: status
    name: "Status Doorbell"
